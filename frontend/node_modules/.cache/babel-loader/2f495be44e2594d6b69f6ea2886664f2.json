{"ast":null,"code":"var _jsxFileName = \"/media/luis/SlaveDrive/personal projects/Pitang/Code/todoReactApp/frontend/src/routes.jsx\";\n\n/* eslint-disable react/jsx-props-no-spreading */\n\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport Navbar from './components/NavBar';\nimport routes from './routelist';\nimport { tokenKey } from './utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst publicRoutes = routes.filter(route => !route.private);\nconst privateRoutes = routes.filter(route => route.private);\n\nconst PublicRouter = ({\n  component: Component,\n  ...otherProps\n}) => {\n  const isAuth = localStorage.getItem(tokenKey);\n  return /*#__PURE__*/_jsxDEV(Route, {\n    exact: true,\n    ...otherProps,\n    render: props => {\n      if (isAuth) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/home'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 18\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Component, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 16\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PublicRouter;\n\nconst PrivateRouter = ({\n  component: Component,\n  ...otherProps\n}) => {\n  const isAuth = localStorage.getItem(tokenKey);\n  return /*#__PURE__*/_jsxDEV(Route, {\n    exact: true,\n    ...otherProps,\n    render: props => {\n      if (isAuth) {\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 18\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/login'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 16\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = PrivateRouter;\n\nconst Routes = () => /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: [/*#__PURE__*/_jsxDEV(Navbar, {\n    title: \"Pitang\",\n    routes: routes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Switch, {\n    children: [publicRoutes.map(route => /*#__PURE__*/_jsxDEV(PublicRouter, { ...route\n    }, route.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)), privateRoutes.map(route => /*#__PURE__*/_jsxDEV(PrivateRouter, { ...route\n    }, route.path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 3\n}, this);\n\n_c3 = Routes;\nexport default Routes;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PublicRouter\");\n$RefreshReg$(_c2, \"PrivateRouter\");\n$RefreshReg$(_c3, \"Routes\");","map":{"version":3,"sources":["/media/luis/SlaveDrive/personal projects/Pitang/Code/todoReactApp/frontend/src/routes.jsx"],"names":["React","BrowserRouter","Switch","Route","Redirect","Navbar","routes","tokenKey","publicRoutes","filter","route","private","privateRoutes","PublicRouter","component","Component","otherProps","isAuth","localStorage","getItem","props","pathname","PrivateRouter","Routes","map","path"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EACiBC,MADjB,EACyBC,KADzB,EACgCC,QADhC,QAEO,kBAFP;AAGA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,MAAMC,YAAY,GAAGF,MAAM,CAACG,MAAP,CAAeC,KAAD,IAAW,CAACA,KAAK,CAACC,OAAhC,CAArB;AACA,MAAMC,aAAa,GAAGN,MAAM,CAACG,MAAP,CAAeC,KAAD,IAAWA,KAAK,CAACC,OAA/B,CAAtB;;AAEA,MAAME,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAA6C;AAChE,QAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqBZ,QAArB,CAAf;AAEA,sBACE,QAAC,KAAD;AACE,IAAA,KAAK,MADP;AAAA,OAEMS,UAFN;AAGE,IAAA,MAAM,EAAGI,KAAD,IAAW;AACjB,UAAIH,MAAJ,EAAY;AACV,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEI,YAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACD,0BAAO,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAfD;;KAAMP,Y;;AAiBN,MAAMS,aAAa,GAAG,CAAC;AAAER,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAA6C;AACjE,QAAMC,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqBZ,QAArB,CAAf;AAEA,sBACE,QAAC,KAAD;AACE,IAAA,KAAK,MADP;AAAA,OAEMS,UAFN;AAGE,IAAA,MAAM,EAAGI,KAAD,IAAW;AACjB,UAAIH,MAAJ,EAAY;AACV,4BAAO,QAAC,SAAD,OAAeG;AAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACD,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAfD;;MAAMC,a;;AAiBN,MAAMC,MAAM,GAAG,mBACb,QAAC,aAAD;AAAA,0BACE,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAuB,IAAA,MAAM,EAAEjB;AAA/B;AAAA;AAAA;AAAA;AAAA,UADF,eAEE,QAAC,MAAD;AAAA,eACGE,YAAY,CAACgB,GAAb,CAAkBd,KAAD,iBAChB,QAAC,YAAD,OAAmCA;AAAnC,OAAmBA,KAAK,CAACe,IAAzB;AAAA;AAAA;AAAA;AAAA,YADD,CADH,EAKGb,aAAa,CAACY,GAAd,CAAmBd,KAAD,iBACjB,QAAC,aAAD,OAAoCA;AAApC,OAAoBA,KAAK,CAACe,IAA1B;AAAA;AAAA;AAAA;AAAA,YADD,CALH;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;MAAMF,M;AAeN,eAAeA,MAAf","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport {\n  BrowserRouter, Switch, Route, Redirect,\n} from 'react-router-dom';\nimport Navbar from './components/NavBar';\nimport routes from './routelist';\nimport { tokenKey } from './utils/constants';\n\nconst publicRoutes = routes.filter((route) => !route.private);\nconst privateRoutes = routes.filter((route) => route.private);\n\nconst PublicRouter = ({ component: Component, ...otherProps }) => {\n  const isAuth = localStorage.getItem(tokenKey);\n\n  return (\n    <Route\n      exact\n      {...otherProps}\n      render={(props) => {\n        if (isAuth) {\n          return <Redirect to={{ pathname: '/home' }} />;\n        }\n        return <Component {...props} />;\n      }}\n    />\n  );\n};\n\nconst PrivateRouter = ({ component: Component, ...otherProps }) => {\n  const isAuth = localStorage.getItem(tokenKey);\n\n  return (\n    <Route\n      exact\n      {...otherProps}\n      render={(props) => {\n        if (isAuth) {\n          return <Component {...props} />;\n        }\n        return <Redirect to={{ pathname: '/login' }} />;\n      }}\n    />\n  );\n};\n\nconst Routes = () => (\n  <BrowserRouter>\n    <Navbar title=\"Pitang\" routes={routes} />\n    <Switch>\n      {publicRoutes.map((route) => (\n        <PublicRouter key={route.path} {...route} />\n      ))}\n\n      {privateRoutes.map((route) => (\n        <PrivateRouter key={route.path} {...route} />\n      ))}\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}