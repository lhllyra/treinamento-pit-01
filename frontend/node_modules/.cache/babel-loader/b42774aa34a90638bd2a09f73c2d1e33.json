{"ast":null,"code":"var _jsxFileName = \"/media/luis/SlaveDrive/personal projects/Pitang/Code/todoReactApp/frontend/src/pages/User/edit-user.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Page from '../../components/Page';\nimport axios from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditUser({\n  history\n}) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [input, setInput] = useState({\n    name: '',\n    email: ''\n  });\n  const isNew = id === 'new';\n  const isValid = input.name && input.email;\n\n  const fetchUser = async () => {\n    const response = await axios.get(`/api/user/${id}`);\n    setInput(response.data);\n  };\n\n  useEffect(() => {\n    if (!isNew) {\n      fetchUser();\n    }\n  }, []);\n\n  const handleChange = event => {\n    const {\n      target: {\n        name,\n        value\n      }\n    } = event;\n    setInput({ ...input,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (isValid) {\n      try {\n        if (isNew) {\n          await axios.post('/api/user', input);\n          toast.success('Usuário criado com sucesso!');\n        } else {\n          await axios.put(`/api/user/${id}`, input);\n          toast.success('Usuário editado com sucesso!');\n        }\n\n        history.push('/user');\n      } catch (error) {\n        toast.error(error.message);\n      }\n    } else {\n      toast.error('Nome e/ou email vazio');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: isNew ? 'Novo Usuário' : 'Editar Usuário',\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          value: input.name,\n          name: \"name\",\n          required: true,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          required: true,\n          name: \"email\",\n          value: input.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      onClick: handleSubmit,\n      disabled: !isValid,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditUser, \"50PS392tOLViKEWJSsoNw3z3Y5A=\", false, function () {\n  return [useParams];\n});\n\n_c = EditUser;\nexport default EditUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"sources":["/media/luis/SlaveDrive/personal projects/Pitang/Code/todoReactApp/frontend/src/pages/User/edit-user.jsx"],"names":["React","useState","useEffect","Form","Button","useParams","toast","Page","axios","EditUser","history","id","input","setInput","name","email","isNew","isValid","fetchUser","response","get","data","handleChange","event","target","value","handleSubmit","e","preventDefault","post","success","put","push","error","message"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState, useEffect } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport Page from '../../components/Page';\nimport axios from '../../utils/api';\n\nfunction EditUser({ history }) {\n  const { id } = useParams();\n  const [input, setInput] = useState({\n    name: '',\n    email: '',\n  });\n\n  const isNew = id === 'new';\n  const isValid = input.name && input.email;\n\n  const fetchUser = async () => {\n    const response = await axios.get(`/api/user/${id}`);\n    setInput(response.data);\n  };\n\n  useEffect(() => {\n    if (!isNew) {\n      fetchUser();\n    }\n  }, []);\n\n  const handleChange = (event) => {\n    const { target: { name, value } } = event;\n    setInput({\n      ...input,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (isValid) {\n      try {\n        if (isNew) {\n          await axios.post('/api/user', input);\n          toast.success('Usuário criado com sucesso!');\n        } else {\n          await axios.put(`/api/user/${id}`, input);\n          toast.success('Usuário editado com sucesso!');\n        }\n        history.push('/user');\n      } catch (error) {\n        toast.error(error.message);\n      }\n    } else {\n      toast.error('Nome e/ou email vazio');\n    }\n  };\n\n  return (\n    <Page title={isNew ? 'Novo Usuário' : 'Editar Usuário'}>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group>\n          <Form.Label>Nome</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={input.name}\n            name=\"name\"\n            required\n            onChange={handleChange}\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            required\n            name=\"email\"\n            value={input.email}\n            onChange={handleChange}\n          />\n        </Form.Group>\n      </Form>\n      <Button\n        type=\"submit\"\n        onClick={handleSubmit}\n        disabled={!isValid}\n      >\n        Submit\n      </Button>\n    </Page>\n  );\n}\n\nexport default EditUser;\n"]},"metadata":{},"sourceType":"module"}