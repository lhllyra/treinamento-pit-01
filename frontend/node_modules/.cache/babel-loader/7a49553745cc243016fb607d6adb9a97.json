{"ast":null,"code":"var _jsxFileName = \"/media/luis/SlaveDrive/personal projects/Pitang/Code/todoReactApp/frontend/src/pages/Todo/TodoContextProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport axios from '../../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoContext = /*#__PURE__*/createContext(); // eslint-disable-next-line react/prop-types\n\nexport default function TodoContextProvider({\n  children\n}) {\n  _s();\n\n  const [todos = [], setTodos] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('/api/todo');\n      setTodos(response.data.data);\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TodoContext.Provider, {\n    value: [todos, setTodos, fetchData],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoContextProvider, \"mKyh6gsp25KwUDGc8oeA7vO1x0w=\");\n\n_c = TodoContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoContextProvider\");","map":{"version":3,"sources":["/media/luis/SlaveDrive/personal projects/Pitang/Code/todoReactApp/frontend/src/pages/Todo/TodoContextProvider.jsx"],"names":["React","createContext","useState","useEffect","toast","axios","TodoContext","TodoContextProvider","children","todos","setTodos","fetchData","response","get","data","error","message"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;;AAEA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,EAAjC,C,CAEP;;AACA,eAAe,SAASM,mBAAT,CAA6B;AAAEC,EAAAA;AAAF,CAA7B,EAA2C;AAAA;;AACxD,QAAM,CAACC,KAAK,GAAG,EAAT,EAAaC,QAAb,IAAyBR,QAAQ,CAAC,EAAD,CAAvC;;AAEA,QAAMS,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,WAAV,CAAvB;AACAH,MAAAA,QAAQ,CAACE,QAAQ,CAACE,IAAT,CAAcA,IAAf,CAAR;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdX,MAAAA,KAAK,CAACW,KAAN,CAAYA,KAAK,CAACH,QAAN,CAAeE,IAAf,CAAoBE,OAAhC;AACD;AACF,GAPD;;AASAb,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,CAACF,KAAD,EAAQC,QAAR,EAAkBC,SAAlB,CAA7B;AAAA,cACGH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GArBuBD,mB;;KAAAA,mB","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport axios from '../../utils/api';\n\nexport const TodoContext = createContext();\n\n// eslint-disable-next-line react/prop-types\nexport default function TodoContextProvider({ children }) {\n  const [todos = [], setTodos] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('/api/todo');\n      setTodos(response.data.data);\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <TodoContext.Provider value={[todos, setTodos, fetchData]}>\n      {children}\n    </TodoContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}