{"ast":null,"code":"var _jsxFileName = \"/media/luis/SlaveDrive/personal projects/Pitang/Code/todoReactApp/frontend/src/components/Todo/TodoList.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-underscore-dangle */\n\n/* eslint-disable react/prop-types */\nimport React, { useState, useContext } from 'react';\nimport { Button, Form, Table } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport axios from '../../utils/api';\nimport ModalComponent from '../Modal';\nimport './Todo.scss';\nimport { TodoContext } from '../../pages/Todo/TodoContextProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const [todos, setTodos] = useContext(TodoContext);\n  const [edit, setEdit] = useState({});\n  const [showModal, setShowModal] = useState(false);\n  const [text, setText] = useState('');\n\n  const handleChecked = async (event, editTodo) => {\n    const {\n      checked: completed\n    } = event.target;\n    const newTodos = todos.map(todo => {\n      if (todo._id === editTodo._id) {\n        return { ...todo,\n          completed\n        };\n      }\n\n      return todo;\n    });\n\n    try {\n      await axios.put(`/api/todo/${editTodo._id}`, { ...editTodo,\n        completed\n      });\n      setTodos(newTodos);\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n\n  const handleEdit = todo => {\n    setEdit(todo);\n    setShowModal(!showModal);\n  };\n\n  const handleRemove = async ({\n    _id\n  }) => {\n    const newTodos = todos.filter(todo => todo._id !== _id);\n\n    try {\n      await axios.delete(`/api/todo/${_id}`);\n      setTodos(newTodos);\n      toast.success('Tarefa removida com sucesso');\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n\n  const onEdit = async () => {\n    const newTodo = todos.map(todo => {\n      if (todo._id === edit._id) {\n        return { ...todo,\n          name: text\n        };\n      }\n\n      return todo;\n    });\n\n    if (!text) {\n      toast.error('Tarefa vazia!');\n      return;\n    }\n\n    try {\n      await axios.put(`/api/todo/${edit._id}`, { ...edit,\n        name: text\n      });\n      setTodos(newTodo);\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n\n    setShowModal(!showModal);\n    setText('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      bordered: true,\n      hover: true,\n      className: \"todos\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            width: \"60%\",\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"todo\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              checked: todo.completed,\n              onChange: event => handleChecked(event, todo),\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: todo.completed ? 'done' : '',\n              children: todo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleEdit(todo),\n              children: ' Edit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => handleRemove(todo),\n              className: \"ml-2\",\n              variant: \"danger\",\n              children: ' Remove'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)]\n        }, todo._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalComponent, {\n      onSave: () => onEdit(),\n      show: showModal,\n      toggle: () => handleEdit(),\n      title: \"De um novo valor para o seu todo\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: [\"Valor Atual:\", ' ', edit === null || edit === void 0 ? void 0 : edit.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            value: text,\n            onChange: ({\n              target: {\n                value\n              }\n            }) => setText(value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TodoList, \"SWUXEC8MgaAaRKx9+JIzeKGzohA=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/media/luis/SlaveDrive/personal projects/Pitang/Code/todoReactApp/frontend/src/components/Todo/TodoList.jsx"],"names":["React","useState","useContext","Button","Form","Table","toast","axios","ModalComponent","TodoContext","TodoList","todos","setTodos","edit","setEdit","showModal","setShowModal","text","setText","handleChecked","event","editTodo","checked","completed","target","newTodos","map","todo","_id","put","error","response","data","message","handleEdit","handleRemove","filter","delete","success","onEdit","newTodo","name","value"],"mappings":"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","sourcesContent":["/* eslint-disable no-underscore-dangle */\n/* eslint-disable react/prop-types */\nimport React, { useState, useContext } from 'react';\nimport { Button, Form, Table } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport axios from '../../utils/api';\nimport ModalComponent from '../Modal';\nimport './Todo.scss';\nimport { TodoContext } from '../../pages/Todo/TodoContextProvider';\n\nfunction TodoList() {\n  const [todos, setTodos] = useContext(TodoContext);\n  const [edit, setEdit] = useState({});\n  const [showModal, setShowModal] = useState(false);\n  const [text, setText] = useState('');\n\n  const handleChecked = async (event, editTodo) => {\n    const { checked: completed } = event.target;\n\n    const newTodos = todos.map((todo) => {\n      if (todo._id === editTodo._id) {\n        return {\n          ...todo,\n          completed,\n        };\n      }\n\n      return todo;\n    });\n\n    try {\n      await axios.put(`/api/todo/${editTodo._id}`, { ...editTodo, completed });\n      setTodos(newTodos);\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n\n  const handleEdit = (todo) => {\n    setEdit(todo);\n    setShowModal(!showModal);\n  };\n\n  const handleRemove = async ({ _id }) => {\n    const newTodos = todos.filter((todo) => todo._id !== _id);\n\n    try {\n      await axios.delete(`/api/todo/${_id}`);\n      setTodos(newTodos);\n      toast.success('Tarefa removida com sucesso');\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n  };\n\n  const onEdit = async () => {\n    const newTodo = todos.map((todo) => {\n      if (todo._id === edit._id) {\n        return {\n          ...todo,\n          name: text,\n        };\n      }\n      return todo;\n    });\n\n    if (!text) {\n      toast.error('Tarefa vazia!');\n      return;\n    }\n\n    try {\n      await axios.put(`/api/todo/${edit._id}`, { ...edit, name: text });\n      setTodos(newTodo);\n    } catch (error) {\n      toast.error(error.response.data.message);\n    }\n\n    setShowModal(!showModal);\n    setText('');\n  };\n\n  return (\n    <>\n      <Table bordered hover className=\"todos\">\n        <thead>\n          <tr>\n            <th>Status</th>\n            <th width=\"60%\">Task</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {todos.map((todo) => (\n            <tr key={todo._id} className=\"todo\">\n              <td>\n                <input\n                  checked={todo.completed}\n                  onChange={(event) => handleChecked(event, todo)}\n                  type=\"checkbox\"\n                />\n              </td>\n              <td>\n                <span className={todo.completed ? 'done' : ''}>{todo.name}</span>\n              </td>\n              <td>\n                <Button\n                  onClick={() => handleEdit(todo)}\n                >\n                  {' Edit'}\n                </Button>\n                <Button\n                  onClick={() => handleRemove(todo)}\n                  className=\"ml-2\"\n                  variant=\"danger\"\n                >\n                  {' Remove'}\n                </Button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n\n      <ModalComponent\n        onSave={() => onEdit()}\n        show={showModal}\n        toggle={() => handleEdit()}\n        title=\"De um novo valor para o seu todo\"\n      >\n        <Form>\n          <Form.Group>\n            <Form.Label>\n              Valor Atual:\n              {' '}\n              {edit?.name}\n            </Form.Label>\n            <Form.Control\n              value={text}\n              onChange={({ target: { value } }) => setText(value)}\n            />\n          </Form.Group>\n        </Form>\n      </ModalComponent>\n    </>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}